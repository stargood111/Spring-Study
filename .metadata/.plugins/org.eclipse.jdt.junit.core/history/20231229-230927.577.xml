<?xml version="1.0" encoding="UTF-8"?><testrun name="hello.core" project="core" tests="28" started="28" failures="0" errors="1" ignored="0">
  <testsuite name="hello.core.beandefinition.BeanDefinitionTest" time="0.034" displayname="BeanDefinitionTest" uniqueid="[engine:junit-jupiter]/[class:hello.core.beandefinition.BeanDefinitionTest]">
    <testcase name="findApplicationBean" classname="hello.core.beandefinition.BeanDefinitionTest" time="0.034" displayname="빈 설정 메타정보 확인" uniqueid="[engine:junit-jupiter]/[class:hello.core.beandefinition.BeanDefinitionTest]/[method:findApplicationBean()]"/>
  </testsuite>
  <testsuite name="hello.core.order.OrderServiceTest" time="0.127" displayname="OrderServiceTest" uniqueid="[engine:junit-jupiter]/[class:hello.core.order.OrderServiceTest]">
    <testcase name="createOrder" classname="hello.core.order.OrderServiceTest" time="0.127" displayname="createOrder()" uniqueid="[engine:junit-jupiter]/[class:hello.core.order.OrderServiceTest]/[method:createOrder()]"/>
  </testsuite>
  <testsuite name="hello.core.scan.filter.ComponentFilterAppConfigTest" time="0.06" displayname="ComponentFilterAppConfigTest" uniqueid="[engine:junit-jupiter]/[class:hello.core.scan.filter.ComponentFilterAppConfigTest]">
    <testcase name="filterScan" classname="hello.core.scan.filter.ComponentFilterAppConfigTest" time="0.06" displayname="filterScan()" uniqueid="[engine:junit-jupiter]/[class:hello.core.scan.filter.ComponentFilterAppConfigTest]/[method:filterScan()]"/>
  </testsuite>
  <testsuite name="hello.core.xml.xmltest" time="0.198" displayname="xmltest" uniqueid="[engine:junit-jupiter]/[class:hello.core.xml.xmltest]">
    <testcase name="xmlAppContext" classname="hello.core.xml.xmltest" time="0.198" displayname="xmlAppContext()" uniqueid="[engine:junit-jupiter]/[class:hello.core.xml.xmltest]/[method:xmlAppContext()]"/>
  </testsuite>
  <testsuite name="hello.core.singleton.StatusfulServiceTest" time="0.015" displayname="StatusfulServiceTest" uniqueid="[engine:junit-jupiter]/[class:hello.core.singleton.StatusfulServiceTest]">
    <testcase name="statefulServiceSingleton" classname="hello.core.singleton.StatusfulServiceTest" time="0.015" displayname="statefulServiceSingleton()" uniqueid="[engine:junit-jupiter]/[class:hello.core.singleton.StatusfulServiceTest]/[method:statefulServiceSingleton()]"/>
  </testsuite>
  <testsuite name="hello.core.singleton.ConfigurationSigletonTest" time="0.071" displayname="ConfigurationSigletonTest" uniqueid="[engine:junit-jupiter]/[class:hello.core.singleton.ConfigurationSigletonTest]">
    <testcase name="configurationSigletonTest" classname="hello.core.singleton.ConfigurationSigletonTest" time="0.025" displayname="configurationSigletonTest()" uniqueid="[engine:junit-jupiter]/[class:hello.core.singleton.ConfigurationSigletonTest]/[method:configurationSigletonTest()]"/>
    <testcase name="configurationDepp" classname="hello.core.singleton.ConfigurationSigletonTest" time="0.043" displayname="configurationDepp()" uniqueid="[engine:junit-jupiter]/[class:hello.core.singleton.ConfigurationSigletonTest]/[method:configurationDepp()]"/>
  </testsuite>
  <testsuite name="hello.core.singleton.SingletonTest" time="0.039" displayname="SingletonTest" uniqueid="[engine:junit-jupiter]/[class:hello.core.singleton.SingletonTest]">
    <testcase name="pureContainer" classname="hello.core.singleton.SingletonTest" time="0.002" displayname="스프링 없는 순수한 DI컨테이너" uniqueid="[engine:junit-jupiter]/[class:hello.core.singleton.SingletonTest]/[method:pureContainer()]"/>
    <testcase name="singletonServiceTest" classname="hello.core.singleton.SingletonTest" time="0.002" displayname="싱글톤 패턴을 사용한 객체 사용" uniqueid="[engine:junit-jupiter]/[class:hello.core.singleton.SingletonTest]/[method:singletonServiceTest()]"/>
    <testcase name="springContainer" classname="hello.core.singleton.SingletonTest" time="0.032" displayname="스프링 컨테이너와 싱글톤" uniqueid="[engine:junit-jupiter]/[class:hello.core.singleton.SingletonTest]/[method:springContainer()]"/>
  </testsuite>
  <testsuite name="hello.core.test.RateDiscountPolicyTest" time="0.002" displayname="RateDiscountPolicyTest" uniqueid="[engine:junit-jupiter]/[class:hello.core.test.RateDiscountPolicyTest]">
    <testcase name="vip_o" classname="hello.core.test.RateDiscountPolicyTest" time="0.001" displayname="VIP는 10&amp;% 할인이 적용되어야 한다" uniqueid="[engine:junit-jupiter]/[class:hello.core.test.RateDiscountPolicyTest]/[method:vip_o()]"/>
    <testcase name="vip_x" classname="hello.core.test.RateDiscountPolicyTest" time="0.001" displayname="VIP가 아닌경우 할인이 적용되지 않아야한다" uniqueid="[engine:junit-jupiter]/[class:hello.core.test.RateDiscountPolicyTest]/[method:vip_x()]"/>
  </testsuite>
  <testsuite name="hello.core.member.MemberSerivceTest" time="0.001" displayname="MemberSerivceTest" uniqueid="[engine:junit-jupiter]/[class:hello.core.member.MemberSerivceTest]">
    <testcase name="join" classname="hello.core.member.MemberSerivceTest" time="0.001" displayname="join()" uniqueid="[engine:junit-jupiter]/[class:hello.core.member.MemberSerivceTest]/[method:join()]"/>
  </testsuite>
  <testsuite name="hello.core.beanfind.ApplicationContextBasicFindTest" time="0.094" displayname="ApplicationContextBasicFindTest" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.ApplicationContextBasicFindTest]">
    <testcase name="findBeanByName2" classname="hello.core.beanfind.ApplicationContextBasicFindTest" time="0.002" displayname="구체 타입으로 조회" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.ApplicationContextBasicFindTest]/[method:findBeanByName2()]"/>
    <testcase name="findByNameX" classname="hello.core.beanfind.ApplicationContextBasicFindTest" time="0.001" displayname="빈 이름으로 조회X" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.ApplicationContextBasicFindTest]/[method:findByNameX()]"/>
    <testcase name="findBeanByName" classname="hello.core.beanfind.ApplicationContextBasicFindTest" time="0.001" displayname="빈 이름으로 조회" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.ApplicationContextBasicFindTest]/[method:findBeanByName()]"/>
    <testcase name="findBeanByType" classname="hello.core.beanfind.ApplicationContextBasicFindTest" time="0.006" displayname="이름 없이 타입으로만 조회" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.ApplicationContextBasicFindTest]/[method:findBeanByType()]"/>
  </testsuite>
  <testsuite name="hello.core.beanfind.ApplicationContextExtendsFindTest" time="0.085" displayname="ApplicationContextExtendsFindTest" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.ApplicationContextExtendsFindTest]">
    <testcase name="findBeanByParentTypeDuplicate" classname="hello.core.beanfind.ApplicationContextExtendsFindTest" time="0.004" displayname="부모 타입으로 조회시, 자식이 둘 이상 있으면, 중복 오류가 발생" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.ApplicationContextExtendsFindTest]/[method:findBeanByParentTypeDuplicate()]"/>
    <testcase name="findBeanBySubType" classname="hello.core.beanfind.ApplicationContextExtendsFindTest" time="0.0" displayname="부모 타입으로 조회시, 자식이 둘 이상 있으면, 중복 오류가 발생" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.ApplicationContextExtendsFindTest]/[method:findBeanBySubType()]"/>
    <testcase name="findBeanByParentTypeBeanName" classname="hello.core.beanfind.ApplicationContextExtendsFindTest" time="0.0" displayname="부모 타입으로 조회시, 자식이 둘 이상 있으면, 중복 오류가 발생" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.ApplicationContextExtendsFindTest]/[method:findBeanByParentTypeBeanName()]"/>
    <testcase name="findBeanByParentType" classname="hello.core.beanfind.ApplicationContextExtendsFindTest" time="0.001" displayname="부모 타입으로 모두 조회" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.ApplicationContextExtendsFindTest]/[method:findBeanByParentType()]"/>
    <testcase name="findBeanByObjectType" classname="hello.core.beanfind.ApplicationContextExtendsFindTest" time="0.018" displayname="부모 타입으로 모두 조회 - Object" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.ApplicationContextExtendsFindTest]/[method:findBeanByObjectType()]"/>
  </testsuite>
  <testsuite name="hello.core.beanfind.ApplicationContextSameBeanFind" time="0.036" displayname="ApplicationContextSameBeanFind" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.ApplicationContextSameBeanFind]">
    <testcase name="findAllbeanByType" classname="hello.core.beanfind.ApplicationContextSameBeanFind" time="0.001" displayname="특정 타입을 모두 조회하기" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.ApplicationContextSameBeanFind]/[method:findAllbeanByType()]"/>
    <testcase name="findBeanTypeDuplicate" classname="hello.core.beanfind.ApplicationContextSameBeanFind" time="0.001" displayname="타입으로 조회시 같은 타입이 둘 이상 있으면, 중복 오류 발생" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.ApplicationContextSameBeanFind]/[method:findBeanTypeDuplicate()]"/>
    <testcase name="findBeanByName" classname="hello.core.beanfind.ApplicationContextSameBeanFind" time="0.001" displayname="타입으로 조회시 같은 타입이 둘 이상 있으면, 빈 이름을 지정하면 된다" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.ApplicationContextSameBeanFind]/[method:findBeanByName()]"/>
  </testsuite>
  <testsuite name="hello.core.beanfind.applicationContextInfoTest" time="0.02" displayname="applicationContextInfoTest" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.applicationContextInfoTest]">
    <testcase name="findApplicationBean" classname="hello.core.beanfind.applicationContextInfoTest" time="0.001" displayname="애플리케이션 빈 출력하기" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.applicationContextInfoTest]/[method:findApplicationBean()]"/>
    <testcase name="findAllBean" classname="hello.core.beanfind.applicationContextInfoTest" time="0.002" displayname="모든 빈 출력하기" uniqueid="[engine:junit-jupiter]/[class:hello.core.beanfind.applicationContextInfoTest]/[method:findAllBean()]"/>
  </testsuite>
  <testsuite name="hello.core.scan.AutoAppConfigTest" time="0.098" displayname="AutoAppConfigTest" uniqueid="[engine:junit-jupiter]/[class:hello.core.scan.AutoAppConfigTest]">
    <testcase name="basicScan" classname="hello.core.scan.AutoAppConfigTest" time="0.098" displayname="basicScan()" uniqueid="[engine:junit-jupiter]/[class:hello.core.scan.AutoAppConfigTest]/[method:basicScan()]">
      <error>org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'hello.core.order.OrderServiceImpl' available: expected single matching bean but found 2: orderServiceImpl,orderService&#13;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1310)&#13;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:484)&#13;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:339)&#13;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:332)&#13;
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1191)&#13;
	at hello.core.scan.AutoAppConfigTest.basicScan(AutoAppConfigTest.java:24)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
